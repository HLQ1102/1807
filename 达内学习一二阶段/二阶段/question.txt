1.什么是shell，什么是shell脚本
  在linux内核与用户之间的解释器程序，shell是一系列命令集，能够完成特定任务的文件
2.标准输入，标准输出，标准错误输出的文件描述符
3.关于重定向操作：重定向输入，重定向输出，重定向错误，混合重定向
4.创建到运行一个脚本的过程
5.什么是变量。变量命名规则。怎么定义赋值变量，怎么查看变量值
6.变量有哪些使用类型（4个）
7.解释：$0,$1,$$,$?,$#,$*
8.解释3种定界符

bash的基本特征
 快捷键、Tab键补齐
 历史命令
 命令别名
 标准数入输出
 重定向
 管道操作
历史命令默认1000条，默认存放在~/.bash_history
		存放全局变量的文件/etc/rofile
清空历史命令：history -c
调用历史命令：！sys
变量：以固定的名称存放，可能会变化的值
	方便在脚本中重复使用
环境变量：/etc/profile、～/.bash_profile
    env:列出所有环境变量
    set:列出所有变量
预定义变量：$#:参数的数量 $!:最后一次后台运行的程序的PID
	     $?:执行命令返回的状态码 $*:列出所有的参数即位置变量
	     $$:当前运行程序的PID
位置变量:储存脚本运行时提供的参数
	  $1 $2 $3 $4.....
read从键盘读入变量值完成赋值
    read [-p "提示信息"] 变量名 	     
变量作用的范围：
     新定义的便另只在当前的shell中有效
      子程序中无法使用
全局变量
     在当前及子shell环境中均有效
    export可将局部变量临时定义为全局变量
变量名只能由数字、字母、下划线组成

运算工具pxer $i + 2    //运算输出，变量值不改变
     $[2**2] $((2**2))  //幂运算，运算输出，变量值不改变，可以进行复合运算，++
    let a=1+2    //运算并赋值，不输出屏幕可以复合运算，++ 
    echo "scale=4;3*12.432" | bc  //scale指定小数有效位，
条件表达式 
    test a>b  //成立为真，失败为假
    [a>b]   //同上
    -z 在表达式中判断变量是否为空值
    -n 在表达式中判断变量是否不为空值
    -f、-e、-d、
    -r、-w、-x //判断当前用户是否具有对文档具有权限
字符串截取
    ${a:起始位置:截取长度} //启始从0开始
    exper substr "$a" 起始位置-结束位置 //起始从1开始
    echo $a | cut -b 起始位置-结束位置  //起始从1开始
字符串的替换删除
    ${a#:*},按：为分隔符最短匹配掐头
    ${a##:*},按：为分隔符最长匹配掐头
    ${a%:*},按：为分隔符最短匹配去尾
    ${a%:*},按：为分隔符最长匹配去尾
    
